import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def APP_ID = 'ru.testsimpleapps.lifewallpaperabstract'
def APP_VERSION = '1.1'
def APP_CODE = 9
def FLAVOR_DIM = 'market'

android {
    namespace = 'ru.testsimpleapps.lifewallpaperabstract'
    flavorDimensions = [FLAVOR_DIM]

    defaultConfig {
        applicationId APP_ID
        minSdkVersion SDK_MIN
        targetSdkVersion SDK_MAX
        compileSdk SDK_MAX
        buildToolsVersion = BUILD_TOOL
        versionCode APP_CODE
        versionName APP_VERSION
        multiDexEnabled true

        buildConfigField "String", "LIB_WALLPAPER", "\"$LIB_WALLPAPER\""

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_static",
                        "-DLIB_WALLPAPER=$LIB_WALLPAPER"
                cppFlags "-std=c++17 -fexceptions -frtti"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    signingConfigs {
        market {
            def keystoreProperties = getKeystore("keystore.properties")
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = file(keystoreProperties['storeFile'])
            storePassword = keystoreProperties['storePassword']
        }
    }

    productFlavors {
        dev {
            dimension FLAVOR_DIM
            applicationId "${APP_ID}.beta"
            versionName "${APP_VERSION}b"
        }

        prod {
            dimension FLAVOR_DIM
            applicationId APP_ID
            versionName APP_VERSION
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            productFlavors.prod.signingConfig signingConfigs.market
        }

        debug {
            minifyEnabled false
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                def buildType = variant.buildType.isDebuggable()? '_debug' : ''
                def dateTime =  new SimpleDateFormat("_MMMMM.dd_HH-mm").format(new Date())
                outputFileName = "AbstractWallpaper_${variant.versionName}" +
                        "${buildType}${dateTime}_" +
                        "build-${variant.versionCode}.apk"
            }
        }
    }

    sourceSets {
        main {
            java.srcDirs = [
                "src/main/java"
            ]

            jni.srcDirs = [
                "src/main/cpp"
            ]

            jniLibs.srcDirs = [
                "../lib"
            ]
        }
    }

    externalNativeBuild {
        cmake {
            version '3.10.2'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
    }

    packagingOptions {
        pickFirst "lib/x86_64/lib${LIB_WALLPAPER}.so"
        pickFirst "lib/x86/lib${LIB_WALLPAPER}.so"
        pickFirst "lib/armeabi-v7a/lib${LIB_WALLPAPER}.so"
        pickFirst "lib/arm64-v8a/lib${LIB_WALLPAPER}.so"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.22'
}